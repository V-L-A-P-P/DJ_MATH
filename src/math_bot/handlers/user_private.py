from src.math_bot.keyboards.user_kb import MenuCallBack
from src.math_bot.teacher.math_teacher import teacher
from aiogram import types, Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InputMediaPhoto, FSInputFile
from pprint import pprint
from src.math_bot.handlers import menu_proccesing
import os


class CleintState(StatesGroup):
    #–®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    main_menu_choosing = State()
    category_choosing = State()
    task_solving = State()
    reading_about = State()

user_private_router = Router()

@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, state: FSMContext):
    print(f'*{message.from_user.id} {message.from_user.username} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç–∞*')
    image_path, reply_markup = await menu_proccesing.get_main_menu()
    now_dir = os.path.dirname(__file__).replace("\\", "/")
    await message.answer_photo(types.FSInputFile(path=now_dir + image_path), reply_markup=reply_markup)
    await state.set_state(CleintState.main_menu_choosing)


@user_private_router.callback_query(MenuCallBack.filter(), CleintState.main_menu_choosing)
async def user_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, state: FSMContext):

    if callback_data.button_tag == 'catalog':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–†–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é*')
        image_path, reply_markup = await menu_proccesing.get_categories_menu()
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        await callback.message.edit_media(media=InputMediaPhoto(media=FSInputFile(now_dir+image_path), caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–¥–∞—á: '), reply_markup=reply_markup)
        await callback.answer()
        await state.set_state(CleintState.category_choosing)
    elif callback_data.button_tag == 'about':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û –Ω–∞—Å" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é*')
        image_path, reply_markup = await menu_proccesing.get_about_menu()
        '''
        await callback.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile(image_path), caption='*–í—Å—ë, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –æ –Ω–∞—Å*:\n'
                                                                         '–í–ª–∞–¥–∏–∫ - –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à üòè\n'
                                                                         '–ñ–µ–Ω—è - –ª–∞–ø—É—Å—è üòò\n'
                                                                         '–ú–∞–º–∞ –ñ–µ–Ω–∏ - –∫—Ä–∞—Å–æ—Ç—É–ª—è üíã\n'
                                                                         '+79262305879 üìû', parse_mode= 'Markdown'),
            reply_markup=reply_markup)
        '''
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        await callback.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile(now_dir + image_path), caption='*–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç?*\n'
                                                                         '‚úÖ–ü—Ä–∏—Å—ã–ª–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º\n'
                                                                         '‚úÖ–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n'
                                                                         '‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è\n'
                                                                         '‚úÖ –ü—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n'
                                                                         '*–ö–æ–Ω—Ç–∞–∫—Ç—ã*\n'
                                                                         '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –ø–∏—à–∏—Ç–µ –Ω–∞–º:\n'
                                                                         'üì© [drakinajenea@gmail.com]\n'
                                                                         'üí¨ [@dr_evgenya]', parse_mode='Markdown'),
            reply_markup=reply_markup)
        await callback.answer()
        await state.set_state(CleintState.reading_about)
    elif callback_data.button_tag == 'theory':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–¢–µ–æ—Ä–∏—è" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é*')
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        path = now_dir + await menu_proccesing.get_theory_doc()
        document = FSInputFile(path=path, filename="–¢–µ–æ—Ä–∏—è(—Ç–µ—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å).pdf")
        await callback.message.bot.send_document(chat_id=callback.from_user.id, document=document)

@user_private_router.callback_query(MenuCallBack.filter(), CleintState.category_choosing)
async def categories_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, state: FSMContext):

    if callback_data.button_tag == 'mainmenu':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∏–∑ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π*')
        image_path, reply_markup = await menu_proccesing.get_main_menu()
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        await callback.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile(now_dir + image_path)),
            reply_markup=reply_markup)
        await callback.answer()
        await state.set_state(CleintState.main_menu_choosing)
    else:
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "<{callback_data.button_tag}>" –∏–∑ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π*')
        task_id, task_image = teacher.create_task_order(callback.from_user.id, callback_data.button_tag)
        await callback.message.edit_media(media=InputMediaPhoto(media=task_image,
                                                                caption='–ó–∞–¥–∞—á–∞ ' + task_id),
                                          reply_markup=await menu_proccesing.get_task_menu(is_first_task=True))
        pprint(teacher.get_task_order_copy())
        pprint(teacher.get_task_now_copy())
        await callback.answer()
        await state.set_state(CleintState.task_solving)


@user_private_router.callback_query(MenuCallBack.filter(), CleintState.task_solving)
async def categories_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, state: FSMContext):
    if callback_data.button_tag == 'mainmenu':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∏–∑ –º–µ–Ω—é —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á*')
        image_path, reply_markup = await menu_proccesing.get_main_menu()
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        await callback.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile(now_dir + image_path)),
            reply_markup=reply_markup)
        await callback.answer()
        await state.set_state(CleintState.main_menu_choosing)
    elif callback_data.button_tag == 'next_task':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–°–ª–µ–¥—É—é—â–∞—è –∑–∞–¥–∞—á–∞" –∏–∑ –º–µ–Ω—é —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á*')
        task_id, task_image = teacher.get_next_task(callback.from_user.id)
        if task_id:
            await callback.message.edit_media(media=InputMediaPhoto(media=task_image,
                                                                    caption='–ó–∞–¥–∞—á–∞ ' + task_id),
                                              reply_markup=await menu_proccesing.get_task_menu(is_last_task=teacher.is_last_task(callback.from_user.id)))
        await callback.answer()
    elif callback_data.button_tag == 'prev_task':
        print(f'{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ü—Ä–µ–¥—ã–¥—É—â–∞—è –∑–∞–¥–∞—á–∞" –∏–∑ –º–µ–Ω—é —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á')
        task_id, task_image = teacher.get_prev_task(callback.from_user.id)
        if task_id:
            await callback.message.edit_media(media=InputMediaPhoto(media=task_image,
                                                                    caption='–ó–∞–¥–∞—á–∞ ' + task_id),
                                              reply_markup=await menu_proccesing.get_task_menu(
                                                  is_first_task=teacher.is_first_task(callback.from_user.id)))
        await callback.answer()
    elif callback_data.button_tag == 'show_answer':
        print(f'*{callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç" –∏–∑ –º–µ–Ω—é —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á*')
        await callback.answer(teacher.get_answer(callback.from_user.id), show_alert=True)
    else:
        await callback.answer()
    pprint(teacher.get_task_order_copy())
    pprint(teacher.get_task_now_copy())


@user_private_router.callback_query(MenuCallBack.filter())
async def user_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, state: FSMContext):
    print(f'!!! {callback.from_user.id} return to main menu')

    if callback_data.button_tag == 'mainmenu':
        image_path, reply_markup = await menu_proccesing.get_main_menu()
        now_dir = os.path.dirname(__file__).replace("\\", "/")
        await callback.message.edit_media(
            media=InputMediaPhoto(media=FSInputFile(now_dir + image_path)),
            reply_markup=reply_markup)
        await callback.answer()
    await state.set_state(CleintState.main_menu_choosing)

if __name__ == '__main__':
    print(__file__)
    print(InputMediaPhoto(media=FSInputFile('src/math_bot/handlers/main_banner.jpg')))






