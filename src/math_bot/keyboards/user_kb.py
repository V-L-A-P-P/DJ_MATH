from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

class MenuCallBack(CallbackData, prefix="menu"):
    button_tag : str


def get_user_main_menu_kb(*, sizes: tuple[int] = (1,)):
    keyboard = InlineKeyboardBuilder()
    btns = {
        "–†–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ ü§ì": "catalog",
        "–û –Ω–∞—Å ‚ÑπÔ∏è": "about"
    }

    for text, menu_name in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(button_tag=menu_name).pack()))

    return keyboard.adjust(*sizes).as_markup()

def get_categories_menu_kb(*, sizes: tuple[int] = (1,)):
    keyboard = InlineKeyboardBuilder()
    btns = {
        "–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è (‚Ññ17)": "2d",
        "–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è (‚Ññ14)": "3d",
        "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã (‚Ññ18)": "parametrs",
        "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†" : "mainmenu"
    }

    for text, menu_name in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(button_tag=menu_name).pack()))

    return keyboard.adjust(*sizes).as_markup()

def get_about_menu_kb(*, sizes: tuple[int] = (1,)):
    keyboard = InlineKeyboardBuilder()
    btns = {
        "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ": "mainmenu"
    }
    for text, menu_name in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(button_tag=menu_name).pack()))

    return keyboard.adjust(*sizes).as_markup()

def get_for_task_kb(*, sizes: tuple[int] = (3,), is_first_task=False, is_last_task=False):
    keyboard = InlineKeyboardBuilder()
    if is_first_task and is_last_task:
        btns = {
            "–û—Ç–≤–µ—Ç üí°": "show_answer",
            "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†": "mainmenu",

        }
    elif is_first_task:
        btns = {
            "–û—Ç–≤–µ—Ç üí°": "show_answer",
            "–°–ª–µ–¥—É—é—â–∞—è": "next_task",
            "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†": "mainmenu",

        }
    elif is_last_task:
        btns = {
            "–ü—Ä–µ–¥—ã–¥—É—â–∞—è": "prev_task",
            "–û—Ç–≤–µ—Ç üí°": "show_answer",
            "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†": "mainmenu",

        }
    else:
        btns = {
            "–ü—Ä–µ–¥—ã–¥—É—â–∞—è": "prev_task",
            "–û—Ç–≤–µ—Ç üí°": "show_answer",
            "–°–ª–µ–¥—É—é—â–∞—è": "next_task",
            "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†": "mainmenu",

        }
    for text, menu_name in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(button_tag=menu_name).pack()))
    if is_first_task and is_last_task:
        return keyboard.adjust(*(1,)).as_markup()
    elif is_first_task or is_last_task:
        return keyboard.adjust(*(2,)).as_markup()
    else:
        return keyboard.adjust(*sizes).as_markup()